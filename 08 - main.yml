---

- name: "Wordpress Installation"
  hosts: ubuntu
  become: yes
  vars_files:
    - apache.vars
    - domain.vars
    - wordpress.vars

  vars_prompt:

    - name: sql_root_password
      prompt: Enter the root password for MySQL
      private: yes

    - name: sql_extra_user
      prompt: Enter the Database User Name for your Wordpress
      private: no

    - name: sql_extra_user_password
      prompt: Enter the Password for the Database user for your Wordpress
      private: yes

    - name: sql_extra_database
      prompt: Enter the database name for your Wordpress 
      private: no

  tasks:

############################# nginx #################################################################

    - name: "Installing nginx and PHP"
      apt:
        name:
          - nginx
          - php-mysql
          - php-fpm
        state: present
        update_cache: true

    - name: "Copying virtualhost(vhost.conf.tmpl)"
      template:
        src: vhost.conf.tmpl
        dest: "/etc/nginx/sites-available/example.com"
   

    - name: "Enable new site"
      file:
        src: /etc/nginx/sites-available/example.com
        dest: /etc/nginx/sites-enabled/default  ######==> seting this as default for now
        state: link

    - name: "Creating DocumentRoot"
      file:
        path: "{{ document_root }}"
        state: directory
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}" 

    - name: "Restarting nginx"
      service:
        name: nginx
        state: restarted
        enabled: true

 ####################### Mariadb ##################################################

    - name: "Mariadb - Installation"
      apt:
        name: 
          - mariadb-server
          - python3-pymysql
        state: present

    - name: "Mariadb - Restart"
      service:
        name: mariadb
        state: restarted
        enabled: true
      tags:
        - mariadb

    - name: "Change the authentication plugin of MySQL root user to mysql_native_password"
      ignore_errors: true
      shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'

    - name: Flush Privileges
      ignore_errors: true
      shell: mysql -u root -e 'FLUSH PRIVILEGES'

    - name: "Mariadb-Reset Root Password"
      ignore_errors: true
      mysql_user:
        login_user: "root"
        login_password: ""
        user: "root"
        password: "{{ sql_root_password }}"
        host_all: true
      tags:
        - mariadb 

    - name: "Mariad-Creating extra database for wordpress"
      mysql_db:
        login_user: "root"
        login_password: "{{ sql_root_password }}"
        name: "{{ sql_extra_database }}"
        state: present
      tags:
        -  mariadb


    - name: "Mariad-Server - Creating Extra user for wordpress"
      mysql_user:
        login_user: "root"
        login_password: "{{ sql_root_password }}"
        user: "{{ sql_extra_user }}"
        password: "{{ sql_extra_user_password }}"
        state: present
        priv: '{{ sql_extra_database }}.*:ALL'
      tags:
        - mariadb

######################### Wordpress ########################################################


    - name: "Downloading wordpress"
      get_url:
        url: "{{ wordpress_url }}"
        dest:  "/tmp/wordpress.tar.gz"  

    - name: "Wordpress - Extracting Archive File"
      unarchive:
        src: "/tmp/wordpress.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: "Wordpress - Copying Contents"
      copy:
        src: "/tmp/wordpress/"
        dest: "{{document_root}}"
        remote_src: true
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"      


    - name: "Wordpress - Creating wp-config.php"
      template:
        src: wp-config.php.tmpl
        dest: "{{document_root}}/wp-config.php"
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"


###################### Post Installation ################################################################

    - name: "Post-Installation - Clean Up"
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/wordpress"
        - "/tmp/wordpress.tar.gz"


    - name: "Post-Installation - Restart services"
      service:
        name: "{{ item }}"
        state: restarted
        enabled: true
      with_items:
        - nginx
        - mariadb  
